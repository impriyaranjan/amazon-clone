{"version":3,"sources":["StateProvider.js","firebase.js","Header.js","Product.js","Home.js","CheckoutProduct.js","reducer.js","Subtotal.js","Checkout.js","Login.js","axios.js","Payment.js","Order.js","Orders.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","Header","basket","user","className","to","src","alt","type","onClick","signOut","email","length","Product","id","title","image","price","rating","dispatch","Array","fill","map","_","item","Home","CheckoutProduct","hideButton","i","getBasketTotal","reduce","amount","state","action","console","log","newBasket","index","findIndex","basketItem","splice","warn","Subtotal","history","useHistory","renderText","decimalScale","displayType","thousandSeparator","prefix","e","push","Checkout","Login","useState","setEmail","password","setPassword","onChange","target","preventDefault","signInWithEmailAndPassword","then","catch","error","alert","message","createUserWithEmailAndPassword","instance","axios","create","baseURL","Payment","stripe","useStripe","elements","useElements","succeeded","setSucceeded","processing","setProcessing","setError","disabled","setDisabled","clientSecret","setClientSecret","useEffect","a","method","url","response","data","getClientSecret","handleSubmit","event","confirmCardPayment","payment_method","card","getElement","CardElement","paymentIntent","collection","doc","uid","set","created","replace","onSubmit","empty","Order","order","moment","unix","format","Orders","orders","setOrders","orderBy","onSnapshot","snapshot","docs","promise","loadStripe","App","onAuthStateChanged","authUser","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.78d5d759.chunk.js","sourcesContent":["// Set Up data Layer;\r\n// we need to track the user info and basket at diff. pages;\r\n// Basically creating Global Variable that can be passed around in a React App. \r\n// instead of passing props from grandparent to parent to child, and so on;\r\n\r\nimport React, { createContext, useContext, useReducer } from \"react\";\r\n\r\n//This is the DataLayer\r\nexport const StateContext = createContext();\r\n\r\n\r\n//BUILD A PROVIDER\r\nexport const StateProvider = ({ reducer, initialState, children}) => (\r\n\t<StateContext.Provider value = {useReducer(reducer, initialState)} >\r\n\t{children}\r\n\t</StateContext.Provider>\r\n);\r\n\r\n\r\nexport const useStateValue = () => useContext(StateContext);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import firebase from \"firebase\";\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDXJsoMzKHeZKxzYPbaq2midjkxrLd0ap8\",\r\n  authDomain: \"clone-d766c.firebaseapp.com\",\r\n  databaseURL: \"https://clone-d766c.firebaseio.com\",\r\n  projectId: \"clone-d766c\",\r\n  storageBucket: \"clone-d766c.appspot.com\",\r\n  messagingSenderId: \"968444586146\",\r\n  appId: \"1:968444586146:web:11460afda16caefbd7cffb\",\r\n  measurementId: \"G-086VBY3FBZ\"\r\n};\r\n\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\n\r\n\r\n\r\n\r\nexport { db, auth };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport \"./Header.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\r\n//import variable basket value;\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { auth } from \"./firebase\";\r\n\r\nfunction Header() {\r\n\r\n\t//dispatch is like shoot in/out items from the basket;\r\n\tconst [{ basket, user }, dispatch] = useStateValue();\r\n\t//console.log(basket);\r\n\tconst handleAuthentication = () => {\r\n\t\tif(user) {\r\n\t\t\tauth.signOut();\r\n\t\t}\r\n\t}\r\n\r\n\treturn ( <nav className=\"header\">\r\n\r\n{/* logo on the left -> amazonlogo img*/}\r\n\r\n\t<Link to=\"/\">\r\n\t<img className=\"header__logo\" \r\n\tsrc=\"https://pngimg.com/uploads/amazon/amazon_PNG11.png\" alt=\"\"/>\r\n\t</Link>\r\n\r\n{/* Search Box*/}\r\n\r\n\t<div className=\"header__search\">\r\n\t<input type=\"text\" className=\"header__searchInput\"/>\r\n\t<SearchIcon className=\"header__searchIcon\" />\r\n\t</div>\r\n\r\n{/* 3 Links(sign in,orders, Prime)*/}\r\n\r\n  <div className=\"header__nav\">\r\n\r\n\t {/* 1st Link*/}\r\n\t <Link to={!user && '/login'} className=\"header__link\"> \r\n\t \t   <div onClick={handleAuthentication} className=\"header__option\">\r\n\t      {/*user?.email || \"Guest\"*/}\r\n\t \t<span className=\"header__optionLineOne\">Hello {!user ? \"Guest\" :\r\n\t       user.email}</span>\r\n\t \t<span className=\"header__optionLineTwo\">{user ? 'Sign Out': 'Sign In'}</span>\r\n\t   </div>\r\n\t </Link>\r\n\r\n\t {/* 2nd Link */}\r\n\t <Link to=\"/orders\" className=\"header__link\">\r\n\t   <div className=\"header__option\">\r\n\t \t<span className=\"header__optionLineOne\">Returns</span>\r\n\t \t<span className=\"header__optionLineTwo\">& Orders</span>\r\n\t   </div>\r\n\t </Link>\t\r\n\r\n\t {/* 3rd Link */}\r\n\t <Link to=\"/\" className=\"header__link\">\r\n\t   <div className=\"header__option\">\r\n\t \t<span className=\"header__optionLineOne\">Your</span>\r\n\t \t<span className=\"header__optionLineTwo\">Prime</span>\r\n\t   </div>\r\n\t </Link>\t\r\n\r\n\t {/* 4th Link */}\r\n\t <Link to=\"/checkout\" className=\"header__link\">\r\n\t \t<div className=\"header__optionBasket\">\r\n\r\n\t \t{/* Shopping basket icon */}\r\n\t    <ShoppingBasketIcon/>\r\n\r\n\t \t{/* Number of items in the basket */}\r\n\t \t<span className=\"header__optionLineTwo header__BasketCount\">\r\n\t \t{basket?.length}\r\n\t \t</span>\r\n\r\n\t \t</div>\r\n\t </Link>\r\n\t\r\n  </div>\r\n\r\n\t{/* Basket icon with number */}\r\n </nav>\r\n  );\r\n}\r\n\r\nexport default Header;  ","import React from 'react';\r\nimport \"./Product.css\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction Product({ id, title, image, price, rating}) {\r\n\t\r\n\tconst [{ basket }, dispatch] = useStateValue();\r\n\r\n\tconst addToBasket = () => {\r\n\t\t//Add item to basket.....\r\n\t\tdispatch({\r\n\t\t\ttype: 'ADD_TO_BASKET',\r\n\t\t\titem: {\r\n\t\t\t\tid: id,\r\n\t\t\t\ttitle: title,\r\n\t\t\t\timage: image,\r\n\t\t\t\tprice: price,\r\n\t\t\t\trating: rating\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"product\">\r\n\t\t  <div className=\"product__info\">\r\n\t\t\t  <p>{title}</p>\r\n\t\t\t  <p className=\"product__price\">\r\n\t\t\t   <small>₹ </small>\r\n\t\t\t   <strong>{price}</strong>\r\n\t\t\t  </p>\r\n\t\t\t  <div className=\"product__rating\">\r\n\t\t\t  {\r\n\t\t\t  \tArray(rating)\r\n\t\t\t  \t.fill()\r\n\t\t\t  \t.map((_) =>(\r\n\t\t\t  \t\t<p>⭐</p>\r\n\t\t\t   ))}\r\n\t\t\t  </div>\r\n\t\t  </div>\r\n\t\t  <img src={image} alt=\"\" />\r\n\t\t  <button onClick={addToBasket}>Add to Basket</button>\r\n\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Product;","import React from 'react';\r\nimport Product from \"./Product\";\r\nimport './Home.css';\r\n\r\nfunction Home() {\r\n   return (\r\n\t<div className=\"home\">\r\n\t\t<img  \r\n\t\tclassName=\"home__image\"\r\n\t\tsrc=\"https://images-eu.ssl-images-amazon.com/images/G/02/digital/video/merch2016/Hero/Covid19/Generic/GWBleedingHero_ENG_COVIDUPDATE__XSite_1500x600_PV_en-GB._CB428684220_.jpg\" \r\n\t\talt=\"\"\r\n\t\t/>\r\n\r\n\t\t{/* Product1 id, title, price, rating, image*/}\r\n\t  <div className=\"home__row\">\r\n\t\t<Product\r\n\t\t  id=\"12345\"\r\n\t\t  title=\"The Learn Startup: How Constant Innovation Creates Radically Successful Business Paperback\"\r\n\t\t  price={300.00}\r\n\t\t  rating={5}\r\n\t\t  image=\"https://m.media-amazon.com/images/I/81jgCiNJPUL._AC_UY327_FMwebp_QL65_.jpg\"\r\n\t\t/>\r\n\t\t{/* Product2 id, title, price, rating, image*/}\r\n\t\t{/* Product3 id, title, price, rating, image and so on*/}\r\n\t\t<Product\r\n\t\t  id=\"12346\"\r\n\t\t  title=\"Canon Pixma G3000 All-in-One Wireless Ink Tank Colour Printer\"\r\n\t\t  price={12499.00}\r\n\t\t  rating={4}\r\n\t\t  image=\"https://images-na.ssl-images-amazon.com/images/I/31KlTzM3%2BAL.jpg\"\r\n\t\t/>\r\n\t  </div> \r\n\r\n\t  <div className=\"home__row\">\r\n\t\t<Product\r\n\t\t  id=\"12347\"\r\n\t\t  title=\"HONOR Magic Watch 2 (46mm, Charcoal Black) 14-Days Battery, SpO2, BT Calling & Music Playback, AMOLED Touch Screen, Personalized Watch Faces, 15 Workout Modes, Sleep & HR Monitor, Smart Assistant\"\r\n\t\t  price={9999.00}\r\n\t\t  rating={4}\r\n\t\t  image=\"https://images-na.ssl-images-amazon.com/images/I/81nzfMLOgaL._SL1500_.jpg\"\r\n\t\t/>\r\n\r\n\t\t<Product\r\n\t\t  id=\"12348\"\r\n\t\t  title=\"Samsung Galaxy Tab A 10.1 (10.1 inch, RAM 2GB, ROM 32GB, Wi-Fi-Only), Black\"\r\n\t\t  price={13999.00}\r\n\t\t  rating={3}\r\n\t\t  image=\"https://images-na.ssl-images-amazon.com/images/I/71PWPoS%2BNtL._SL1500_.jpg\"\r\n\t\t/>\r\n\t\t<Product\r\n\t\t  id=\"12349\"\r\n\t\t  title=\"Netgear Orbi AC3000 Tri-Band Wi-Fi System Router (White)\"\r\n\t\t  price={23499.00}\r\n\t\t  rating={4}\r\n\t\t  image=\"https://images-na.ssl-images-amazon.com/images/I/51lyBB5yN6L._SL1200_.jpg\"\r\n\t\t/>\r\n\t  </div>\r\n\r\n\t  <div className=\"home__row\">\r\n\t  <Product\r\n\t\t  id=\"12350\"\r\n\t\t  title=\"Panasonic 215 cm (85 inches) Full HD Android Smart LED TV TH-40HS450DX (Black) (2020 Model)\"\r\n\t\t  price={19990.00}\r\n\t\t  rating={4}\r\n\t\t  image=\"https://images-na.ssl-images-amazon.com/images/I/71el-PAu1IL._SL1500_.jpg\"\r\n\t\t/>\r\n\t  </div>\r\n\r\n\t{/*4th row on home page!!*/}\r\n\t  <div className=\"home__row\">\r\n\t  <Product\r\n\t\t  id=\"12351\"\r\n\t\t  title=\"Fitkit FT100S Series 1.75HP (3.25HP Peak) Motorized Treadmill With Free at Home Installation Services and Free Diet & Fitness Plan\"\r\n\t\t  price={23999.00}\r\n\t\t  rating={3}\r\n\t\t  image=\"https://images-na.ssl-images-amazon.com/images/I/613wi6OmlwL._SL1100_.jpg\"\r\n\t\t/>\r\n\t\t<Product\r\n\t\t  id=\"12352\"\r\n\t\t  title=\"AmazonBasics 6 kg Fully-Automatic Front Load Washing Machine (Grey/Silver, In-built Heater, Self cleaning technology)\"\r\n\t\t  price={13999.00}\r\n\t\t  rating={5}\r\n\t\t  image=\"https://images-na.ssl-images-amazon.com/images/I/81X52AI2ovL._SL1500_.jpg\"\r\n\t\t/>\r\n\t\t<Product\r\n\t\t  id=\"12353\"\r\n\t\t  title=\"Bosch Aquatak 125 1.5-Watt High Pressure Washer (Green)\"\r\n\t\t  price={9499.00}\r\n\t\t  rating={4}\r\n\t\t  image=\"https://images-na.ssl-images-amazon.com/images/I/717wYrO%2Bb0L._SL1500_.jpg\"\r\n\t\t/>\r\n\t  </div>\r\n\t</div>\r\n\t);\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport \"./CheckoutProduct.css\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction CheckoutProduct({ id, title, image, price, rating,hideButton }) {\r\n\t\r\n\tconst [{ basket }, dispatch] = useStateValue();\r\n\r\n\t//console.log(id, title, image, price, rating ); /*anywhere you can debug your error*/\r\n\r\n\tconst removeFromBasket = () => {\r\n\t\t//remove item from the  basket...\r\n\t\tdispatch({\r\n\t\t\ttype: \"REMOVE_FROM_BASKET\",\r\n\t\t\tid: id,\r\n\t\t});\r\n\t}\r\n\treturn (\r\n\r\n\t\t /*here we have all the mapping checkoutProduct imported */\r\n\t\t/*image on the left and all the info we want on rightside of product */\r\n\t\t<div className=\"checkoutProduct\">\r\n\t\t\t<img className=\"checkoutProduct__image\" src={image} alt=\"\" />\r\n\r\n\t\t\t<div className=\"checkoutProduct__info\">\r\n\t\t\t\t<p className=\"checkoutProduct__title\">{title}</p>\r\n\r\n\t\t\t\t<p className=\"checkoutProduct__price\">\r\n\t\t\t\t   <small>₹ </small>\r\n\t\t\t\t   <strong>{price}</strong>\r\n\t\t\t\t</p>\r\n\r\n\t\t\t\t<div className=\"checkoutProduct__rating\">\r\n\t\t\t\t{  Array(rating)\r\n\t\t\t\t\t.fill()\r\n\t\t\t\t\t.map((_, i) => (\r\n\t\t\t\t\t\t<p>⭐</p>\r\n\t\t\t\t ))}\r\n\t\t\t\t</div>\r\n\t\t\t\t{!hideButton && (\r\n\t\t\t\t\t<button onClick={removeFromBasket}>Remove from Basket\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CheckoutProduct;","//its an object and it has basket;\r\n\r\nexport const initialState = {\r\n\tbasket: [],\r\n\tuser: null,\r\n};\r\n\r\n//to get sum of prime of tatal items in basket as its value;(selector)\r\nexport const getBasketTotal = (basket) =>\r\n basket?.reduce((amount, item) => item.price +amount, 0)\r\n\r\n//we manupulate state by our action like add/remove item to the basket;\r\n\r\nconst reducer = (state, action) => {\r\n\r\n\tconsole.log(action);\r\n\tswitch (action.type) {\r\n\t\tcase \"ADD_TO_BASKET\":\r\n\t\t   //Logic for adding item to basket\r\n\t\t   return {\r\n\t\t   \t...state,  //whatever the state return it;\r\n\t\t   \tbasket: [...state.basket, action.item],\r\n\t\t   };\r\n\r\n\t\t//After payment successful: your basket must be empty array; now go create order.js in App.js where you redirect after successful payment!!\r\n\t\tcase 'EMPTY_BASKET':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tbasket: []\r\n\t\t\t};\r\n\r\n\t\tcase \"REMOVE_FROM_BASKET\":\r\n\t\t   //Logic for Removing item from basket\r\n\t\t   //we cloned the basket\r\n\t\t   let newBasket = [...state.basket];\r\n\r\n\t\t   //we check to see if product exists then splice/remove that index and reduce size of array by 1;\r\n\t\t   const index = state.basket.findIndex((basketItem) => basketItem.id === action.id);\r\n\r\n\t\t   if(index>= 0) {\r\n\t\t   \t//item exists in basket and remove it...\r\n\t\t   \t newBasket.splice(index, 1);\r\n\t\t   }else {\r\n\t\t   \t console.warn(\r\n\t\t   \t \t`cant remove product (id: ${action.id}) as its not in the Basket!`\r\n\t   \t \t);\r\n\t\t   }\r\n\t\t   return {...state, basket: newBasket };\r\n\t\t \r\n\t\t case \"SET_USER\":\r\n\t\t \treturn{\r\n\t\t \t\t...state,\r\n\t\t \t\tuser: action.user\r\n\t\t \t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\n\r\nexport default reducer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport \"./Subtotal.css\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { getBasketTotal } from \"./reducer\";\r\nimport { useHistory} from \"react-router-dom\";\r\n\r\nfunction Subtotal() {\r\n\tconst history = useHistory();\r\n\tconst [{ basket },dispatch] = useStateValue();\r\n\treturn (\r\n\t\t<div className=\"subtotal\">\r\n\t\t\t{/* price */}\r\n\t\t\t<CurrencyFormat\r\n\t\t\t\t\r\n\t\t\t\trenderText={(value) =>(\r\n\t\t\t\t  <>\r\n\t\t\t\t    <p>\r\n\t\t\t\t       Subtotal ({basket.length} items): <strong>{`${value}`}</strong>\r\n\t\t\t\t    </p>\r\n\t\t\t\t    <small className=\"subtotal__gift\">\r\n\t\t\t\t     <input type=\"checkbox\"/>This order contains a gift.\r\n\t\t\t\t    </small>\r\n\t\t\t\t  </>\r\n\t\t\t\t)}\r\n\r\n\r\n\t\t\t  decimalScale={2}\r\n\t\t\t  value={getBasketTotal(basket)}\r\n\t\t\t  displayType={\"text\"}\r\n\t\t\t  thousandSeparator={true}\r\n\t\t\t  prefix={'₹ '}\r\n\t\t\t/>\r\n\t\t{/*redirecting to payment page with browser history of selected items*/}\r\n\t\t\t<button onClick={e => history.push('/payment')}>Proceed to checkout</button>\r\n\t\t\t\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Subtotal;","import React from \"react\";\r\nimport \"./Checkout.css\";\r\nimport CheckoutProduct from \"./CheckoutProduct\";\r\nimport Subtotal from \"./Subtotal\";\r\n\r\n\r\n//import variable basket value;\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction Checkout() {\r\n\t//whenever you want manipulation then you also need to pull dispatch;\r\n\tconst [{ basket, user }, dispatch] = useStateValue();\r\n\r\n\treturn (\r\n\t\t<div className=\"checkout\">\r\n\t\t  <div className=\"checkout__left\">\r\n\t\t\t<img \r\n\t\t\tclassName=\"checkout__ad\" \r\n\t\t\tsrc=\"https://images-eu.ssl-images-amazon.com/images/G/31/img20/CEPC/Jupiter/Headers/P1/xcm_banners_02_cepc-v5_1500x300_in-en.jpg\" \r\n\t\t\talt=\"\" \r\n\t\t\t/>\r\n\t\t\t{/*if your basket length is empty show me this stuff:*/}\r\n\t\t\t{basket?.length === 0 ? (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h3>Hello,{user?.email}</h3>\r\n\t\t\t\t\t<h2>Your Shopping Basket is empty</h2>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t  You have no item in your basket. TO buy one or more items,\r\n\t\t\t\t\t   click \"Add to basket\" next to the item\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<div>\r\n\t\t\t\t    <h3>Hello,{user?.email}</h3>\r\n\t\t\t\t\t<h2 className=\"checkout__title\">Your shopping basket</h2>\r\n\r\n\t\t\t\t{/* List out of all of the Checkout Products */}\r\n\t\t\t\t{basket?.map((item) => (\r\n\t\t\t\t<CheckoutProduct\r\n\t\t\t\t\tid={item.id}\r\n\t\t\t\t\ttitle={item.title}\r\n\t\t\t\t\timage={item.image}\r\n\t\t\t\t\tprice={item.price}\r\n\t\t\t\t\trating={item.rating}\r\n\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t  </div>\r\n\t\t  {basket.length > 0 && (\r\n\t\t  \t <div className=\"checkout__right\">\r\n\t\t  \t \t<Subtotal />\r\n\t\t  \t </div>\r\n\t  \t   )}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Checkout;","import React, { useState } from \"react\";\r\nimport \"./Login.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { auth } from \"./firebase\";\r\n\r\nfunction Login() {\r\n\t//it uses your browser history and if valid then automatically sign to amazon hoge page!!\r\n\tconst history = useHistory();\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n\tconst signIn = e => {\r\n\t\t//prevent from refreshing the page\r\n\t\te.preventDefault();\r\n\r\n\t\t//some fancy firebase login shitt....verification and authentic email and password checkup;\r\n\t\tauth.signInWithEmailAndPassword(email, password)\r\n\t\t\t.then(auth =>{\r\n\t\t\t\thistory.push('/')\r\n\t\t\t})\r\n\t\t\t.catch(error => alert(error.message))\r\n\t}\r\n\r\n\tconst register = e=> {\r\n\t\te.preventDefault();\r\n\r\n\t\t// do some fancy firebase register shitt......\r\n\t\tauth.createUserWithEmailAndPassword(email,password)\r\n\t\t\t.then((auth) => {\r\n\t\t\t\t//it successfully created new user with email \r\n\t\t\t\t//and password.\r\n\t\t\t\t{/*console.log(auth); */}\r\n\t\t\t\tif (auth) {\r\n\t\t\t\t\thistory.push('/')\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch(error => alert(error.message))\r\n\t}\r\n\r\n\treturn (\r\n\t  <div className=\"login\">\t\t\r\n\t    <Link to='/'>\r\n\t\t    <img className=\"login__logo\"\r\n\t\t\t    src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a9/Amazon_logo.svg/1024px-Amazon_logo.svg.png\" \r\n\t\t       alt=\"\"/>\r\n\t    </Link>\r\n\r\n\t    <div className=\"login__container\">\r\n\t    \t<h1>Sign-in</h1>\r\n\r\n\t    \t<form>\r\n\t    \t\t<h5>E-mail</h5>\r\n\t    \t\t<input type=\"text\" value={email} onChange=\r\n\t    \t\t{e => setEmail(e.target.value)} />\r\n\r\n\t    \t\t<h5>Password</h5>\r\n\t    \t\t<input type=\"password\" value={password} onChange=\r\n\t    \t\t{e => setPassword(e.target.value)} />\r\n\r\n\r\n\t    \t\t<button type=\"submit\" onClick={signIn}\r\n\t    \t\tclassName=\"login__signInButton\">Sign In</button>\r\n\t    \t</form>\r\n\t    \t\t<p>\t\r\n\t    \t\t\tBy signing-in you agree to Amazon's\r\n\t    \t\t\tConditions of use & Sale. Please\r\n\t    \t\t\tsee our Privacy Notice, our Cookies Notice\r\n\t    \t\t\tand our Interest-Based Ads\r\n\t    \t\t\tNotice\r\n\t    \t\t</p>\r\n\r\n\t    \t\t<button onClick={register}\r\n\t    \t\tclassName=\"login__registerButton\">Create your amazon account</button>\t\r\n\t    </div>\r\n\r\n\t  </div>\r\n\t);\r\n}\r\n\r\nexport default Login;","// need to install axios....needed for payment purpose(vey important fetching library for request/get)\r\n// >>npm i axios\r\n\r\nimport axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n\t\r\n\t//our back-end and amazon-clone app were running on different ports, so we need to set base url \r\n\t// same as our back-end url which was provided by firebase: express api during backend work;\r\n\t/*   baseURL: '...'     //THE API (cloud Function ) URL ,for testing purpose of backend */\r\n\r\n\tbaseURL: 'http://localhost:5001/clone-d766c/us-central1/api'\r\n\r\n});\r\n\r\nexport default instance;\r\n\r\n\r\n\r\n\r\n//Here we are prefering axios over (js fetch API) bcz it is easier and gives easy way\r\n//... to add base URL. ANd it is so widely used in professional environment!!!!!\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport \"./Payment.css\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport CheckoutProduct from \"./CheckoutProduct\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport { getBasketTotal } from \"./reducer\";\r\nimport axios from \"./axios\";\r\nimport { db } from \"./firebase\";  //this is used to push orders in cloud database of firebase;\r\n\r\nfunction Payment() {\r\n\t\r\n\tconst [{ basket, user }, dispatch] = useStateValue();\r\n\tconst history = useHistory();\r\n\r\n\t//for payment method\r\n\tconst stripe = useStripe();\r\n\tconst elements = useElements();\r\n\r\n\tconst [succeeded, setSucceeded] = useState(false);\r\n\tconst [processing, setProcessing] = useState(\"\");\r\n\tconst [error, setError] = useState(null);\r\n\tconst [disabled, setDisabled] = useState(true);\r\n\tconst [clientSecret, setClientSecret] = useState(true);\r\n\r\n//very important snippet for payment request!!!!!!!!!!!!!\r\n\tuseEffect(() => {\r\n\t\t//generate the special stripe secret which allows us to charge a customer\r\n\t\t//and it also vary from customer2 customer and basket2basket price changes!\r\n\t\t\r\n//whenever the basket changes it get request to the stripe to change accordingly;\r\n\t\tconst getClientSecret = async () => {\r\n\t\t\t// waiting for request axios(is way of request may be push/set or anything). now create axios.js file.\r\n\t\t\tconst response = await axios({\r\n\t\t\t\tmethod: 'post',\r\n\t\t\t\t//Stripe expects the total in a currencies subunits.1rs =100cent\r\n\t\t\t\t// This is the url which we used in post method of app in functions>>index.js\r\n\t\t\t\turl: `/payments/create?total=${getBasketTotal(basket) * 100}`\r\n\t\t\t})\r\n\t\t\t//once we build out backend;clientsecret is coming from there;\r\n\t\t\tsetClientSecret(response.data.clientSecret)\r\n\t\t}\r\n\r\n\t\tgetClientSecret();\r\n\r\n\t}, [basket])\r\n\r\n\t// this is to check our backend running properly or not after writing code of funtions>>index.js and axios.js then we are jumping on Payment.js;\r\n\tconsole.log('THE SECRET IS >>>', clientSecret);\r\n\t//used for debbing;\r\n\t/*console.log(user)*/\r\n\r\n\t//its a asynchronous function.event\r\n\tconst handleSubmit = async (event) => {\r\n\t\t//do all the fancy stripe stuff---- for payment\r\n\t\tevent.preventDefault();  //stop from refreshing the page\r\n\t\tsetProcessing(true); //in the middle of payment enter key wont work;\r\n\r\n\t\tconst payload = await stripe.confirmCardPayment(clientSecret, {\r\n\t\t\tpayment_method: {\r\n\t\t\t\tcard: elements.getElement(CardElement)\r\n\t\t\t}\r\n\t\t}).then(({ paymentIntent }) => {\r\n\t\t\t//payment intent = Payment confirmation;\r\n\t\t\t\r\n\t\t\t//we need to push our order in cloud__database!!!! sql database collection concept;\r\n\t\t\tdb.collection('users')\r\n\t\t\t  .doc(user?.uid)\r\n\t\t\t  .collection('orders')\r\n\t\t\t  .doc(paymentIntent.id) //order id\r\n\t\t\t  .set({\r\n\t\t\t  \t  basket: basket,\r\n\t\t\t  \t  amount: paymentIntent.amount,\r\n\t\t\t  \t  created: paymentIntent.created  //when the order was placed;\r\n\r\n\t\t\t  })\r\n\r\n\r\n\t\t\tsetSucceeded(true);\r\n\t\t\tsetError(null);\r\n\t\t\tsetProcessing(false);\r\n\r\n\t\t\t//Now after completing payment your basket must be empty\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'EMPTY_BASKET'\r\n\t\t\t});    //Now go to reducer where you listen to the event and do some change!!\r\n\r\n\t\t\thistory.replace('/orders');//after payment user must shifted to order page\r\n\t//after completing this go to cloud/backend setup!!!!!!!!!wow....\r\n\t\t})\r\n\t}\r\n\t//takes an event and does some changes!! ( e => {}) means.\r\n\tconst handleChange = event => {\r\n\t\t//Listen  for changes in the CardElement\r\n\t\t// and Display any error as the customer types their card details;\r\n\t\tsetDisabled(event.empty);\r\n\t\tsetError(event.error ? event.error.message : \"\");\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"payment\">\r\n\t\t\t<div className=\"payment__container\">\r\n\t\t\t\t<h1>\r\n\t\t\t\tCheckout(<Link to=\"/checkout\">{basket?.length} items</Link>)\r\n\t\t\t\t</h1>\r\n\r\n\r\n\t\t\t   {/* Payment section-delivery address*/}\r\n\t\t\t   \t<div className=\"payment__section\">\r\n\t\t\t   \t\t<div className=\"payment__title\">\r\n\t\t\t   \t\t   <h3>Delivery Address</h3>\r\n\t\t\t   \t\t</div>\r\n\t\t\t   \t\t<div className=\"payment__address\">\r\n\t\t\t   \t\t  <p>{user?.email}</p>\r\n\t\t\t   \t\t  <p>A58-59, Nawada,</p>\r\n\t\t\t   \t\t  <p>UttamNagar, Delhi</p>\r\n\t\t\t   \t\t</div>\r\n\t\t\t   \t</div>\r\n\r\n\r\n\r\n\t\t\t    {/* Payment section-Review Items*/}\r\n\t\t\t   \t<div className=\"payment__section\">\r\n\t\t\t   \t  <div className=\"payment__title\">\r\n\t\t\t   \t     <h3>Review items and Delivery</h3>\r\n\t\t\t   \t  </div>\r\n\t\t\t   \t  <div className=\"payment__items\">\r\n\t\t\t   \t  \t {basket.map(item => (\r\n\t\t\t   \t  \t \t<CheckoutProduct\r\n\t\t\t   \t  \t \t\tid={item.id}\r\n\t\t\t   \t  \t \t\ttitle={item.title}\r\n\t\t\t   \t  \t \t\timage={item.image}\r\n\t\t\t   \t  \t \t\tprice={item.price}\r\n\t\t\t   \t  \t \t\trating={item.rating}\r\n\t\t\t   \t  \t \t/>\r\n\t\t\t   \t  \t ))}\r\n\t\t\t   \t  </div>\r\n\t\t\t   \t</div>\r\n\r\n\r\n\r\n\t\t\t   {/* Payment section-Payment Method*/}\r\n\t\t\t   \t<div className=\"payment__section\">\r\n\t\t\t   \t    <div className=\"payment__title\">\r\n\t\t\t   \t       <h3>Payment Method</h3>\r\n\t\t\t   \t    </div>\r\n\t\t\t   \t    <div className=\"payment__details\">\r\n\t\t\t   \t    \t{/* Stripe magic will go (important)*/}\r\n\r\n\t\t\t   \t    \t<form onSubmit={handleSubmit}>\r\n\t\t\t\t   \t    \t<CardElement onChange={handleChange}/>\r\n\r\n\t\t\t\t   \t    \t<div className=\"payment__priceContainer\">\r\n\t\t\t\t\t   \t    \t<CurrencyFormat\r\n\t\t\t\t\t   \t    \t\trenderText={(value) =>(\r\n\t\t\t\t\t   \t    \t\t    <h3>Order Total: {value}</h3>\r\n\t\t\t\t\t   \t    \t\t)}\r\n\t\t\t\t\t   \t    \t  decimalScale={2}\r\n\t\t\t\t\t   \t    \t  value={getBasketTotal(basket)}\r\n\t\t\t\t\t   \t    \t  displayType={\"text\"}\r\n\t\t\t\t\t   \t    \t  thousandSeparator={true}\r\n\t\t\t\t\t   \t    \t  prefix={'₹ '}\r\n\t\t\t\t\t   \t    \t/>\r\n\t\t\t\t\t   \t    \t<button disabled={processing || disabled || succeeded}>\r\n\t\t\t\t\t   \t    \t\t<span>{processing ? <p>Processing</p> : \"Buy Now\"}</span>\r\n\t\t\t\t\t   \t    \t</button>\r\n\r\n\t\t\t\t   \t    \t</div>\r\n\r\n\t\t\t\t   \t    \t\t{/* Errors */}\r\n\t\t\t\t   \t    \t\t{error && <div>{error}</div> }\r\n\t\t\t   \t    \t</form>\r\n\t\t\t   \t    </div>\r\n\t\t\t   \t</div>\r\n\r\n\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Payment;","import React from 'react'\r\nimport \"./Order.css\";\r\nimport moment from \"moment\";\r\nimport CheckoutProduct from \"./CheckoutProduct\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\n\r\nfunction Order({ order }) {\r\n\treturn (\r\n\t\t<div className=\"order\">\r\n\t\t\t<h2>Order</h2>\r\n\t\t\t<p>{moment.unix(order.data.created).format(\"MMMM Do YYYY, h:mma\")}\r\n\t\t\t</p>\r\n\t\t\t<p className=\"order__id\">\r\n\t\t\t\t<small>{order.id}</small>\r\n\t\t\t</p>\r\n\t\t\t{order.data.basket?.map(item => (\r\n\t\t\t\t<CheckoutProduct\r\n\t\t\t\t\tid={item.id}\r\n\t\t\t\t\ttitle={item.title}\r\n\t\t\t\t\timage={item.image}\r\n\t\t\t\t\tprice={item.price}\r\n\t\t\t\t\trating={item.rating}\r\n\t\t\t\t\thideButton\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t\t<CurrencyFormat\r\n\t\t\t\trenderText={(value) =>(\r\n\t\t\t\t    <h3 className=\"order__total\">Order Total: {value}</h3>\r\n\t\t\t\t)}\r\n\t\t\t  decimalScale={2}\r\n\t\t\t  value={order.data.amount /100} /*we multiplied by subunits, hence divide it by 100 to get original price*/\r\n\t\t\t  displayType={\"text\"}\r\n\t\t\t  thousandSeparator={true}\r\n\t\t\t  prefix={'₹ '}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Order;","import React, { useState, useEffect } from 'react';\r\nimport \"./Orders.css\";\r\nimport { db } from \"./firebase\";\r\nimport { useStateValue } from \"./StateProvider\"; //for user state;\r\nimport Order from \"./Order\";\r\n\r\n\r\nfunction Orders() {\r\n\t//bring placed orders from your cloud database!!\r\n\tconst [{ basket, user }, dispatch] = useStateValue();\r\n\tconst [orders, setOrders] = useState([]);\r\n\r\n\tuseEffect(() =>{\r\n\t  if(user){\r\n\t\tdb.collection('users')  //here you are accessing user collection from your cloud db;\r\n\t\t  .doc(user?.uid)\r\n\t\t  .collection('orders')\r\n\t\t  .orderBy('created', 'desc')\r\n\t\t  .onSnapshot( snapshot => (    //This gives us realtime snapshot of our database; means if we add or remove item from db it will update at realtime;\r\n\t\t  \t setOrders(snapshot.docs.map(doc => ({\r\n\t\t  \t \t   id: doc.id,\r\n\t\t  \t \t   data: doc.data()\r\n\t\t  \t })))\r\n\t\t  ))\r\n\t  }\telse {\r\n\t  \t\tsetOrders([])\r\n\t  }\r\n\r\n\t},[user])  //empty bracket is important!!\r\n\r\n\treturn (\r\n\t\t<div className=\"orders\">\r\n\t\t\t{/*<h1>Payment Successful!! Your order accepted</h1>*/}\r\n\t\t\t<h1>Your Order</h1>\r\n\t\t\t<div className=\"orders__order\">\r\n\t\t\t\t{orders?.map(order => (\r\n\t\t\t\t\t<Order order={order}/>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Orders;","import React, { useEffect } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router,Switch,Route,} from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Home from \"./Home\";\nimport Checkout from \"./Checkout\";\nimport Login from \"./Login\";\nimport { auth } from \"./firebase\";\nimport { useStateValue } from \"./StateProvider\";\nimport Payment from \"./Payment\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport Orders from \"./Orders\";\n\n\nconst promise = loadStripe(\n\"pk_test_51HdjKFAM8lZMlaCYe9vPWWgwt79jxH15bAR9D6r6jI9MbFBrToXC4BFOc440jDaIrM7Qy5R95gB0VBDoXERNgzlC00aJglXhgS\"\n);\n\nfunction App() {\n\n  const [{}, dispatch] = useStateValue();\n \n  useEffect(() => {\n  \n      //it will only run once when the app component loads..\n      auth.onAuthStateChanged(authUser => {\n        console.log('THE USER IS >>> ', authUser);\n\n        if(authUser){\n          // setting user/prev user with firebase;\n          //user just logged in/ was logged in even you refresh the page;\n          dispatch({\n            type: 'SET_USER',\n            user: authUser,\n          });\n        }else {\n          \n          // the user is logged out;        \n          dispatch({\n            type: 'SET_USER',\n            user: null,\n          });\n        }\n    });\n    \n  }, []);\n\n\n\n  return (\n    <Router>\n    <div className=\"App\">\n      <Switch>\n\n        <Route path=\"/checkout\">\n          <Header/>\n          <Checkout/>\n        </Route>\n\n        <Route path=\"/orders\">\n          <Header/>\n          <Orders/>\n        </Route>\n\n        <Route path=\"/login\">\n          <Login/>\n        </Route>\n\n        <Route path=\"/payment\">\n          <Header/>\n          <Elements stripe={promise}>\n            <Payment/>\n          </Elements>\n        </Route>\n\n        { /*this is the default route, */}\n        <Route path=\"/\">\n          <Header/>\n          <Home/>\n        </Route>\n\n      </Switch>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n//also import StateProvider;\nimport { StateProvider } from \"./StateProvider\";\n//also import initial state\nimport reducer, { initialState } from \"./reducer\";\n\n//Wrap our Entire App inside of a stateprovider;\nReactDOM.render(\n  <React.StrictMode>\n  \t  <StateProvider initialState={initialState} reducer={reducer}>\n\t    <App/>\n  \t  </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}